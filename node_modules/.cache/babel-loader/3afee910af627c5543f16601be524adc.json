{"ast":null,"code":"var _jsxFileName = \"/Users/Dan/Code/react-component-lib-storybook/src/components/ContainerPattern/index.js\";\nimport React from 'react'; // loading\n\nvar LoadingView = function LoadingView() {\n  return React.createElement(\"div\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, \"Loading...\");\n}; // Error View\n\n\nvar ErrorView = function ErrorView() {\n  return React.createElement(\"div\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Something went wrong! Please try again.\");\n}; // Planet View\n\n\nvar Planet = function Planet(_ref) {\n  var name = _ref.name,\n      climate = _ref.climate,\n      terrain = _ref.terrain;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Climate: \", climate), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Terrain: \", terrain));\n}; // Main component\n\n\nvar PlanetView = function PlanetView(_ref2) {\n  var loading = _ref2.loading,\n      planet = _ref2.planet;\n\n  if (loading) {\n    return React.createElement(LoadingView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  } else if (planet) {\n    return React.createElement(Planet, Object.assign({}, planet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(ErrorView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }\n};\n\nexport default PlanetView;","map":{"version":3,"sources":["/Users/Dan/Code/react-component-lib-storybook/src/components/ContainerPattern/index.js"],"names":["React","LoadingView","ErrorView","Planet","name","climate","terrain","PlanetView","loading","planet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN;AAAA,CAApB,C,CAEA;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAChB;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADgB;AAAA,CAAlB,C,CAIA;;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,MAAkBC,OAAlB,QAAkBA,OAAlB;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeC,OAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeC,OAAf,CAHF,CADa;AAAA,CAAf,C,CAQA;;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,QAAyB;AAAA,MAAtBC,OAAsB,SAAtBA,OAAsB;AAAA,MAAbC,MAAa,SAAbA,MAAa;;AAC1C,MAAID,OAAJ,EAAa;AACX,WAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,IAAIC,MAAJ,EAAY;AACjB,WAAO,oBAAC,MAAD,oBAAYA,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFM,MAEA;AACL,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CARD;;AAUA,eAAeF,UAAf","sourcesContent":["import React from 'react';\n\n// loading\nconst LoadingView = () => <div className=\"text-muted\">Loading...</div>;\n\n// Error View\nconst ErrorView = () => (\n  <div className=\"text-danger\">Something went wrong! Please try again.</div>\n);\n\n// Planet View\nconst Planet = ({ name, climate, terrain }) => (\n  <div>\n    <h2>{name}</h2>\n    <div>Climate: {climate}</div>\n    <div>Terrain: {terrain}</div>\n  </div>\n);\n\n// Main component\nconst PlanetView = ({ loading, planet }) => {\n  if (loading) {\n    return <LoadingView />;\n  } else if (planet) {\n    return <Planet {...planet} />;\n  } else {\n    return <ErrorView />;\n  }\n};\n\nexport default PlanetView;\n"]},"metadata":{},"sourceType":"module"}