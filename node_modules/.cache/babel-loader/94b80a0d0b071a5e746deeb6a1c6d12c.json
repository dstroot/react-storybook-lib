{"ast":null,"code":"import _classCallCheck from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Dan/Code/react-component-lib-storybook/src/components/Navigation/index.js\";\nimport React from \"react\";\nimport { Link } from \"@reach/router\";\nimport logo from \"./media/logo-horiz.svg\"; // import \"./styles.scss\";\n// isCurrent - true if the location.pathname is exactly the same as the anchor’s href.\n\nvar isActive = function isActive(_ref) {\n  var isCurrent = _ref.isCurrent;\n  return isCurrent ? {\n    className: \"active nav-link\"\n  } : {\n    className: \"nav-link\"\n  };\n}; // `getProps` Calls up to you to get props for the underlying anchor element.\n// Useful for styling the anchor as active.\n\n\nvar ExactNavLink = function ExactNavLink(props) {\n  return React.createElement(Link, Object.assign({\n    getProps: isActive\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\n\nvar Navigation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Navigation, _React$Component);\n\n  function Navigation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Navigation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Navigation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.buttonRef = React.createRef();\n    _this.state = {\n      isHidden: true\n    };\n\n    _this.toggleHidden = function (event) {\n      _this.setState({\n        isHidden: !_this.state.isHidden\n      }); // blur the button (otherwise it stays pressed)\n\n\n      _this.buttonRef.current.blur();\n    };\n\n    return _this;\n  }\n\n  _createClass(Navigation, [{\n    key: \"render\",\n    value: function render() {\n      // hide and show classes\n      var buttonClasses = \"navbar-toggler\";\n\n      if (this.state.isHidden) {\n        buttonClasses = \"navbar-toggler collapsed\";\n      }\n\n      var dropDown = \"navbar-collapse collapse show\";\n\n      if (this.state.isHidden) {\n        dropDown = \"navbar-collapse collapse\";\n      }\n\n      return React.createElement(\"nav\", {\n        className: \"navbar fixed-top navbar-expand-sm navbar-light bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"navbar-brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"d-inline-block align-middle\",\n        src: logo,\n        width: \"220\",\n        height: \"40\",\n        alt: \"Pacific Life\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: buttonClasses,\n        type: \"button\",\n        \"aria-label\": \"Toggle navigation\",\n        onClick: this.toggleHidden,\n        ref: this.buttonRef // get a reference to the button\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: dropDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ExactNavLink, {\n        to: \"/\",\n        onClick: this.toggleHidden,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Home\"), React.createElement(ExactNavLink, {\n        to: \"/about\",\n        onClick: this.toggleHidden,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"About\"), React.createElement(ExactNavLink, {\n        to: \"/news\",\n        onClick: this.toggleHidden,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"News\"))));\n    }\n  }]);\n\n  return Navigation;\n}(React.Component);\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/Dan/Code/react-component-lib-storybook/src/components/Navigation/index.js"],"names":["React","Link","isActive","isCurrent","className","ExactNavLink","props","Navigation","buttonRef","createRef","state","isHidden","toggleHidden","event","setState","current","blur","buttonClasses","dropDown","logo","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport logo from \"./media/logo-horiz.svg\";\n\n// import \"./styles.scss\";\n\n// isCurrent - true if the location.pathname is exactly the same as the anchor’s href.\nconst isActive = ({ isCurrent }) => {\n  return isCurrent\n    ? { className: \"active nav-link\" }\n    : { className: \"nav-link\" };\n};\n\n// `getProps` Calls up to you to get props for the underlying anchor element.\n// Useful for styling the anchor as active.\nconst ExactNavLink = props => <Link getProps={isActive} {...props} />;\n\nclass Navigation extends React.Component {\n  buttonRef = React.createRef();\n  state = {\n    isHidden: true\n  };\n\n  toggleHidden = event => {\n    this.setState({\n      isHidden: !this.state.isHidden\n    });\n    // blur the button (otherwise it stays pressed)\n    this.buttonRef.current.blur();\n  };\n\n  render() {\n    // hide and show classes\n    let buttonClasses = \"navbar-toggler\";\n    if (this.state.isHidden) {\n      buttonClasses = \"navbar-toggler collapsed\";\n    }\n    let dropDown = \"navbar-collapse collapse show\";\n    if (this.state.isHidden) {\n      dropDown = \"navbar-collapse collapse\";\n    }\n\n    return (\n      <nav className=\"navbar fixed-top navbar-expand-sm navbar-light bg-light\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            <img\n              className=\"d-inline-block align-middle\"\n              src={logo}\n              width=\"220\"\n              height=\"40\"\n              alt=\"Pacific Life\"\n            />\n          </Link>\n\n          <button\n            className={buttonClasses}\n            type=\"button\"\n            aria-label=\"Toggle navigation\"\n            onClick={this.toggleHidden}\n            ref={this.buttonRef} // get a reference to the button\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className={dropDown}>\n            <ExactNavLink to=\"/\" onClick={this.toggleHidden}>\n              Home\n            </ExactNavLink>\n\n            <ExactNavLink to=\"/about\" onClick={this.toggleHidden}>\n              About\n            </ExactNavLink>\n\n            <ExactNavLink to=\"/news\" onClick={this.toggleHidden}>\n              News\n            </ExactNavLink>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}