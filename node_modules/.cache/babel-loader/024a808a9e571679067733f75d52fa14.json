{"ast":null,"code":"var jsonCache = {};\nvar textCache = {};\nexport var fetchWithCache = function fetchWithCache(url) {\n  if (jsonCache[url] && jsonCache[url].data) {\n    // data already fetched\n    return jsonCache[url].data;\n  } else if (jsonCache[url]) {\n    // still waiting for the data\n    throw jsonCache[url].promise;\n  } else {\n    //new url, start fetching\n    jsonCache[url] = {\n      promise: fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return jsonCache[url].data = data;\n      })\n    };\n    throw jsonCache[url].promise;\n  }\n};\nexport var fetchWithCacheText = function fetchWithCacheText(url) {\n  if (textCache[url] && textCache[url].data) {\n    // data already fetched\n    return textCache[url].data;\n  } else if (textCache[url]) {\n    // still waiting for the data\n    throw textCache[url].promise;\n  } else {\n    //new url, start fetching\n    textCache[url] = {\n      promise: fetch(url).then(function (res) {\n        return res.text();\n      }).then(function (data) {\n        return textCache[url].data = data;\n      })\n    };\n    throw textCache[url].promise;\n  }\n};","map":{"version":3,"sources":["/Users/Dan/Code/react-component-lib-storybook/src/utils/cache.js"],"names":["jsonCache","textCache","fetchWithCache","url","data","promise","fetch","then","res","json","fetchWithCacheText","text"],"mappings":"AAAA,IAAMA,SAAS,GAAG,EAAlB;AACA,IAAMC,SAAS,GAAG,EAAlB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG,EAAI;AACnC,MAAIH,SAAS,CAACG,GAAD,CAAT,IAAkBH,SAAS,CAACG,GAAD,CAAT,CAAeC,IAArC,EAA2C;AACzC;AACA,WAAOJ,SAAS,CAACG,GAAD,CAAT,CAAeC,IAAtB;AACD,GAHD,MAGO,IAAIJ,SAAS,CAACG,GAAD,CAAb,EAAoB;AACzB;AACA,UAAMH,SAAS,CAACG,GAAD,CAAT,CAAeE,OAArB;AACD,GAHM,MAGA;AACL;AACAL,IAAAA,SAAS,CAACG,GAAD,CAAT,GAAiB;AACfE,MAAAA,OAAO,EAAEC,KAAK,CAACH,GAAD,CAAL,CACNI,IADM,CACD,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADF,EAENF,IAFM,CAED,UAAAH,IAAI;AAAA,eAAKJ,SAAS,CAACG,GAAD,CAAT,CAAeC,IAAf,GAAsBA,IAA3B;AAAA,OAFH;AADM,KAAjB;AAKA,UAAMJ,SAAS,CAACG,GAAD,CAAT,CAAeE,OAArB;AACD;AACF,CAhBM;AAkBP,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAP,GAAG,EAAI;AACvC,MAAIF,SAAS,CAACE,GAAD,CAAT,IAAkBF,SAAS,CAACE,GAAD,CAAT,CAAeC,IAArC,EAA2C;AACzC;AACA,WAAOH,SAAS,CAACE,GAAD,CAAT,CAAeC,IAAtB;AACD,GAHD,MAGO,IAAIH,SAAS,CAACE,GAAD,CAAb,EAAoB;AACzB;AACA,UAAMF,SAAS,CAACE,GAAD,CAAT,CAAeE,OAArB;AACD,GAHM,MAGA;AACL;AACAJ,IAAAA,SAAS,CAACE,GAAD,CAAT,GAAiB;AACfE,MAAAA,OAAO,EAAEC,KAAK,CAACH,GAAD,CAAL,CACNI,IADM,CACD,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACG,IAAJ,EAAJ;AAAA,OADF,EAENJ,IAFM,CAED,UAAAH,IAAI;AAAA,eAAKH,SAAS,CAACE,GAAD,CAAT,CAAeC,IAAf,GAAsBA,IAA3B;AAAA,OAFH;AADM,KAAjB;AAKA,UAAMH,SAAS,CAACE,GAAD,CAAT,CAAeE,OAArB;AACD;AACF,CAhBM","sourcesContent":["const jsonCache = {};\nconst textCache = {};\n\nexport const fetchWithCache = url => {\n  if (jsonCache[url] && jsonCache[url].data) {\n    // data already fetched\n    return jsonCache[url].data;\n  } else if (jsonCache[url]) {\n    // still waiting for the data\n    throw jsonCache[url].promise;\n  } else {\n    //new url, start fetching\n    jsonCache[url] = {\n      promise: fetch(url)\n        .then(res => res.json())\n        .then(data => (jsonCache[url].data = data)),\n    };\n    throw jsonCache[url].promise;\n  }\n};\n\nexport const fetchWithCacheText = url => {\n  if (textCache[url] && textCache[url].data) {\n    // data already fetched\n    return textCache[url].data;\n  } else if (textCache[url]) {\n    // still waiting for the data\n    throw textCache[url].promise;\n  } else {\n    //new url, start fetching\n    textCache[url] = {\n      promise: fetch(url)\n        .then(res => res.text())\n        .then(data => (textCache[url].data = data)),\n    };\n    throw textCache[url].promise;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}