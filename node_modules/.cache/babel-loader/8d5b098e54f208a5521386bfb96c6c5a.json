{"ast":null,"code":"var _jsxFileName = \"/Users/Dan/Code/react-component-lib-storybook/src/components/Button/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n/**\nButton is a component for use on forms to reflect the current state. \n */\n\nvar Button = function Button(props) {\n  var submitted = props.submitted;\n  var success = props.success;\n\n  if (!submitted) {\n    return React.createElement(StyledButton, {\n      icon: \"check\",\n      color: \"primary\",\n      message: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  if (submitted && success === \"wait\") {\n    return React.createElement(StyledButton, {\n      icon: \"spinner\",\n      spin: true,\n      color: \"primary\",\n      message: \"Submitted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n  if (submitted && success === \"yes\") {\n    return React.createElement(StyledButton, {\n      icon: \"check-circle\",\n      color: \"success\",\n      message: \"Thanks!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  if (submitted && success === \"no\") {\n    return React.createElement(StyledButton, {\n      icon: \"exclamation-triangle\",\n      color: \"danger\",\n      message: \"Failed!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n};\n\nButton.propTypes = {\n  /** Should be set to \"true\" if the form has been submitted */\n  submitted: PropTypes.bool.isRequired,\n\n  /** Success is a string that takes either \"yes\", \"no\", or \"wait\" */\n  success: PropTypes.string.isRequired\n};\n/**\n * Buttons\n */\n\nvar StyledButton = function StyledButton(_ref) {\n  var icon = _ref.icon,\n      color = _ref.color,\n      spin = _ref.spin,\n      message = _ref.message;\n  var componentClasses = [\"btn\", \"btn-block\", \"btn-\" + color];\n\n  if (spin) {\n    icon = React.createElement(FontAwesomeIcon, {\n      icon: icon,\n      spin: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  } else {\n    icon = React.createElement(FontAwesomeIcon, {\n      icon: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"button\", {\n    type: \"submit\",\n    className: componentClasses.join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, icon, \" \\xA0 \", message);\n};\n\nStyledButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  spin: PropTypes.bool,\n  message: PropTypes.string.isRequired\n};\nexport default Button;","map":{"version":3,"sources":["/Users/Dan/Code/react-component-lib-storybook/src/components/Button/index.js"],"names":["React","PropTypes","FontAwesomeIcon","Button","props","submitted","success","propTypes","bool","isRequired","string","StyledButton","icon","color","spin","message","componentClasses","join"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n/**\nButton is a component for use on forms to reflect the current state. \n */\nconst Button = props => {\n  const submitted = props.submitted;\n  const success = props.success;\n\n  if (!submitted) {\n    return <StyledButton icon=\"check\" color=\"primary\" message=\"Submit\" />;\n  }\n\n  if (submitted && success === \"wait\") {\n    return (\n      <StyledButton icon=\"spinner\" spin color=\"primary\" message=\"Submitted\" />\n    );\n  }\n\n  if (submitted && success === \"yes\") {\n    return (\n      <StyledButton icon=\"check-circle\" color=\"success\" message=\"Thanks!\" />\n    );\n  }\n\n  if (submitted && success === \"no\") {\n    return (\n      <StyledButton\n        icon=\"exclamation-triangle\"\n        color=\"danger\"\n        message=\"Failed!\"\n      />\n    );\n  }\n};\n\nButton.propTypes = {\n  /** Should be set to \"true\" if the form has been submitted */\n  submitted: PropTypes.bool.isRequired,\n  /** Success is a string that takes either \"yes\", \"no\", or \"wait\" */\n  success: PropTypes.string.isRequired\n};\n\n/**\n * Buttons\n */\n\nconst StyledButton = ({ icon, color, spin, message }) => {\n  const componentClasses = [\"btn\", \"btn-block\", \"btn-\" + color];\n\n  if (spin) {\n    icon = <FontAwesomeIcon icon={icon} spin />;\n  } else {\n    icon = <FontAwesomeIcon icon={icon} />;\n  }\n\n  return (\n    <button type=\"submit\" className={componentClasses.join(\" \")}>\n      {icon} &nbsp; {message}\n    </button>\n  );\n};\n\nStyledButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  spin: PropTypes.bool,\n  message: PropTypes.string.isRequired\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}