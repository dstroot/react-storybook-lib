{"ast":null,"code":"var _jsxFileName = \"/Users/Dan/Code/react-component-lib-storybook/src/components/ContainerPattern/index.stories.js\";\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react\"; // components\n\nimport PlanetView from \"../ContainerPattern\";\nimport PlanetContainer from \"./container\";\nvar planet = {\n  name: \"Dagobah\",\n  rotation_period: \"23\",\n  orbital_period: \"341\",\n  diameter: \"8900\",\n  climate: \"murky\",\n  gravity: \"N/A\",\n  terrain: \"swamp, jungles\",\n  surface_water: \"8\",\n  population: \"unknown\",\n  residents: [],\n  films: [\"https://swapi.co/api/films/2/\", \"https://swapi.co/api/films/6/\", \"https://swapi.co/api/films/3/\"],\n  created: \"2014-12-10T11:42:22.590000Z\",\n  edited: \"2014-12-20T20:58:18.425000Z\",\n  url: \"https://swapi.co/api/planets/5/\"\n}; // PlanetView section\n\nstoriesOf(\"PlanetView\", module).addParameters({\n  // default for all stories in this book\n  info: {\n    inline: true,\n    header: false,\n    text: \"\\n        A simple view-only generic planet component, and a logic-only component, that simply calls the view in its render function.\\n\\n        With the separated view component, we can very easily use it in a style guide, and fine tune each of the variants just by providing different props. Also, we can easily test the view using Enzyme for instance.\\n\\n        http://lucasmreis.github.io/blog/simple-react-patterns/\\n        https://www.swapi.co/about\\n      \"\n  }\n}).add(\"show PlanetView loading\", function () {\n  return React.createElement(PlanetView, {\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n}).add(\"show PlanetView error\", function () {\n  return React.createElement(PlanetView, {\n    error: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n}).add(\"show PlanetView\", function () {\n  return React.createElement(PlanetView, {\n    planet: planet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n}).add(\"show PlanetContainer\", function () {\n  return React.createElement(PlanetContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/Users/Dan/Code/react-component-lib-storybook/src/components/ContainerPattern/index.stories.js"],"names":["React","storiesOf","PlanetView","PlanetContainer","planet","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","films","created","edited","url","module","addParameters","info","inline","header","text","add"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,SADO;AAEbC,EAAAA,eAAe,EAAE,IAFJ;AAGbC,EAAAA,cAAc,EAAE,KAHH;AAIbC,EAAAA,QAAQ,EAAE,MAJG;AAKbC,EAAAA,OAAO,EAAE,OALI;AAMbC,EAAAA,OAAO,EAAE,KANI;AAObC,EAAAA,OAAO,EAAE,gBAPI;AAQbC,EAAAA,aAAa,EAAE,GARF;AASbC,EAAAA,UAAU,EAAE,SATC;AAUbC,EAAAA,SAAS,EAAE,EAVE;AAWbC,EAAAA,KAAK,EAAE,CACL,+BADK,EAEL,+BAFK,EAGL,+BAHK,CAXM;AAgBbC,EAAAA,OAAO,EAAE,6BAhBI;AAiBbC,EAAAA,MAAM,EAAE,6BAjBK;AAkBbC,EAAAA,GAAG,EAAE;AAlBQ,CAAf,C,CAqBA;;AACAjB,SAAS,CAAC,YAAD,EAAekB,MAAf,CAAT,CACGC,aADH,CACiB;AACb;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,IADJ;AAEJC,IAAAA,MAAM,EAAE,KAFJ;AAGJC,IAAAA,IAAI;AAHA;AAFO,CADjB,EAgBGC,GAhBH,CAgBO,yBAhBP,EAgBkC;AAAA,SAAM,oBAAC,UAAD;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAhBlC,EAiBGA,GAjBH,CAiBO,uBAjBP,EAiBgC;AAAA,SAAM,oBAAC,UAAD;AAAY,IAAA,KAAK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAjBhC,EAkBGA,GAlBH,CAkBO,iBAlBP,EAkB0B;AAAA,SAAM,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAErB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAlB1B,EAmBGqB,GAnBH,CAmBO,sBAnBP,EAmB+B;AAAA,SAAM,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAnB/B","sourcesContent":["import React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\n\n// components\nimport PlanetView from \"../ContainerPattern\";\nimport PlanetContainer from \"./container\";\n\nconst planet = {\n  name: \"Dagobah\",\n  rotation_period: \"23\",\n  orbital_period: \"341\",\n  diameter: \"8900\",\n  climate: \"murky\",\n  gravity: \"N/A\",\n  terrain: \"swamp, jungles\",\n  surface_water: \"8\",\n  population: \"unknown\",\n  residents: [],\n  films: [\n    \"https://swapi.co/api/films/2/\",\n    \"https://swapi.co/api/films/6/\",\n    \"https://swapi.co/api/films/3/\"\n  ],\n  created: \"2014-12-10T11:42:22.590000Z\",\n  edited: \"2014-12-20T20:58:18.425000Z\",\n  url: \"https://swapi.co/api/planets/5/\"\n};\n\n// PlanetView section\nstoriesOf(\"PlanetView\", module)\n  .addParameters({\n    // default for all stories in this book\n    info: {\n      inline: true,\n      header: false,\n      text: `\n        A simple view-only generic planet component, and a logic-only component, that simply calls the view in its render function.\n\n        With the separated view component, we can very easily use it in a style guide, and fine tune each of the variants just by providing different props. Also, we can easily test the view using Enzyme for instance.\n\n        http://lucasmreis.github.io/blog/simple-react-patterns/\n        https://www.swapi.co/about\n      `\n    }\n  })\n  .add(\"show PlanetView loading\", () => <PlanetView loading />)\n  .add(\"show PlanetView error\", () => <PlanetView error />)\n  .add(\"show PlanetView\", () => <PlanetView planet={planet} />)\n  .add(\"show PlanetContainer\", () => <PlanetContainer />);\n"]},"metadata":{},"sourceType":"module"}