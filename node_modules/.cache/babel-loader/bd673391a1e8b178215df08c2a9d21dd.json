{"ast":null,"code":"import _classCallCheck from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Dan/Code/react-component-lib-storybook/src/components/ContainerPattern/container.js\";\nimport React from 'react';\nimport PlanetView from './index'; // State:\n// { loading: true }\n// { loading: false, planet: { name, climate, terrain } }\n// { loading: false, error: any }\n\nvar PlanetContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlanetContainer, _React$Component);\n\n  function PlanetContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlanetContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlanetContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(PlanetContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.swapi.co/api/planets/5').then(function (res) {\n        return res.json();\n      }).then(function (planet) {\n        return _this2.setState({\n          loading: false,\n          planet: planet\n        });\n      }, function (error) {\n        return _this2.setState({\n          loading: false,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PlanetView, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PlanetContainer;\n}(React.Component);\n\nexport default PlanetContainer;","map":{"version":3,"sources":["/Users/Dan/Code/react-component-lib-storybook/src/components/ContainerPattern/container.js"],"names":["React","PlanetView","PlanetContainer","state","loading","fetch","then","res","json","planet","setState","error","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,SAAvB,C,CAEA;AACA;AACA;AACA;;IAEMC,e;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;;;;;;wCAEY;AAAA;;AAClBC,MAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAGI,UAAAG,MAAM;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE,KAAX;AAAkBK,UAAAA,MAAM,EAANA;AAAlB,SAAd,CAAJ;AAAA,OAHV,EAII,UAAAE,KAAK;AAAA,eAAI,MAAI,CAACD,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE,KAAX;AAAkBO,UAAAA,KAAK,EAALA;AAAlB,SAAd,CAAJ;AAAA,OAJT;AAMD;;;6BAEQ;AACP,aAAO,oBAAC,UAAD,oBAAgB,KAAKR,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAd2BH,KAAK,CAACY,S;;AAiBpC,eAAeV,eAAf","sourcesContent":["import React from 'react';\nimport PlanetView from './index';\n\n// State:\n// { loading: true }\n// { loading: false, planet: { name, climate, terrain } }\n// { loading: false, error: any }\n\nclass PlanetContainer extends React.Component {\n  state = { loading: true };\n\n  componentDidMount() {\n    fetch('https://www.swapi.co/api/planets/5')\n      .then(res => res.json())\n      .then(\n        planet => this.setState({ loading: false, planet }),\n        error => this.setState({ loading: false, error })\n      );\n  }\n\n  render() {\n    return <PlanetView {...this.state} />;\n  }\n}\n\nexport default PlanetContainer;\n"]},"metadata":{},"sourceType":"module"}