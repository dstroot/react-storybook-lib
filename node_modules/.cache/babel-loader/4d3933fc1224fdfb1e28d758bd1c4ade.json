{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Dan/Code/react-component-lib-storybook/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dan/Code/react-component-lib-storybook/src/components/FetchHooks/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nvar useDataApi = function useDataApi(initialUrl, initialData) {\n  // state management\n  var _useState = useState(initialData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(initialUrl),\n      _useState4 = _slicedToArray(_useState3, 2),\n      url = _useState4[0],\n      setUrl = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isError = _useState8[0],\n      setIsError = _useState8[1]; // make API call\n\n\n  var fetchData =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsError(false);\n              setIsLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return axios(url);\n\n            case 5:\n              result = _context.sent;\n              setData(result.data);\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              setIsError(true);\n              console.log(_context.t0.message);\n\n            case 13:\n              setIsLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 9]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // useEffect hook to call API\n\n\n  useEffect(function () {\n    fetchData();\n  }, [url] // only run if url changes\n  );\n\n  var doGet = function doGet(event, url) {\n    event.preventDefault();\n    setUrl(url);\n  };\n\n  return {\n    data: data,\n    isLoading: isLoading,\n    isError: isError,\n    doGet: doGet\n  };\n};\n\nfunction FetchHooks() {\n  var _useState9 = useState('redux'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      query = _useState10[0],\n      setQuery = _useState10[1];\n\n  var _useDataApi = useDataApi('http://hn.algolia.com/api/v1/search?query=redux', {\n    hits: []\n  }),\n      data = _useDataApi.data,\n      isLoading = _useDataApi.isLoading,\n      isError = _useDataApi.isError,\n      doGet = _useDataApi.doGet;\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-inline mt-5\",\n    onSubmit: function onSubmit(event) {\n      return doGet(event, \"http://hn.algolia.com/api/v1/search?query=\".concat(query));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"sr-only\",\n    for: \"query\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Query\"), React.createElement(\"input\", {\n    type: \"text\",\n    class: \"form-control mb-2 mr-sm-2\",\n    id: \"query\",\n    placeholder: query,\n    onChange: function onChange(event) {\n      return setQuery(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-primary mb-2\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Search\")), isError && React.createElement(\"div\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Something went wrong ...\"), isLoading ? React.createElement(\"div\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Loading ...\") : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, data.hits.map(function (item) {\n    return React.createElement(\"li\", {\n      key: item.objectID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, item.title));\n  })));\n}\n\nexport default FetchHooks;","map":{"version":3,"sources":["/Users/Dan/Code/react-component-lib-storybook/src/components/FetchHooks/index.js"],"names":["React","useState","useEffect","axios","useDataApi","initialUrl","initialData","data","setData","url","setUrl","isLoading","setIsLoading","isError","setIsError","fetchData","result","console","log","message","doGet","event","preventDefault","FetchHooks","query","setQuery","hits","target","value","map","item","objectID","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useDataApi = (initialUrl, initialData) => {\n  // state management\n  const [data, setData] = useState(initialData);\n  const [url, setUrl] = useState(initialUrl);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  // make API call\n  const fetchData = async () => {\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const result = await axios(url);\n      setData(result.data);\n    } catch (error) {\n      setIsError(true);\n      console.log(error.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  // useEffect hook to call API\n  useEffect(\n    () => {\n      fetchData();\n    },\n    [url] // only run if url changes\n  );\n\n  const doGet = (event, url) => {\n    event.preventDefault();\n    setUrl(url);\n  };\n\n  return { data, isLoading, isError, doGet };\n};\n\nfunction FetchHooks() {\n  const [query, setQuery] = useState('redux');\n  const { data, isLoading, isError, doGet } = useDataApi(\n    'http://hn.algolia.com/api/v1/search?query=redux',\n    { hits: [] }\n  );\n\n  return (\n    <div className=\"container\">\n      <form\n        className=\"form-inline mt-5\"\n        onSubmit={event =>\n          doGet(event, `http://hn.algolia.com/api/v1/search?query=${query}`)\n        }\n      >\n        <label className=\"sr-only\" for=\"query\">\n          Query\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control mb-2 mr-sm-2\"\n          id=\"query\"\n          placeholder={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <button className=\"btn btn-primary mb-2\" type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      {isError && <div className=\"text-danger\">Something went wrong ...</div>}\n\n      {isLoading ? (\n        <div className=\"text-muted\">Loading ...</div>\n      ) : (\n        <ul>\n          {data.hits.map(item => (\n            <li key={item.objectID}>\n              <a href={item.url}>{item.title}</a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default FetchHooks;\n"]},"metadata":{},"sourceType":"module"}